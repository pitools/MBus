<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:MBTools.ViewModels"
			 xmlns:views="clr-namespace:MBTools.Views"
             mc:Ignorable="d" d:DesignWidth="1024" d:DesignHeight="160"
             x:Class="MBTools.Views.TestView"
             x:DataType="vm:TestViewModel">
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:TestViewModel />
	</Design.DataContext>

	<StackPanel Background="AliceBlue" Orientation="Horizontal" Name="TestStackPanel">
		<StackPanel Background="AliceBlue" Orientation="Vertical" HorizontalAlignment="Center"
					Margin="12">
			<!-- This button will ask HAL to open the doors -->
			<Button Command="{Binding StartOneCommand}"
                    Content="START 1"
					MinWidth="96" />

			<Button Command="{Binding StartOneCommand}"
                    Content="START 2"
					MinWidth="96"
					HorizontalAlignment="Center" />

			<Button Grid.Column="1"
					VerticalAlignment="Stretch" VerticalContentAlignment="Center"
					Background="Transparent"
					Command="{Binding ApplicationCommands.Open}"
					IsEnabled="True"
					MinWidth="96"
					HorizontalAlignment="Center"
					Content="STOP ❌"/>
		</StackPanel>

		<StackPanel Background="AliceBlue" Orientation="Vertical" HorizontalAlignment="Center"
					Margin="12">
			<Button IsEnabled="True"
					Foreground="Black"
					Background="Red"
                    Content="I"
					MinWidth="32"
					 HorizontalContentAlignment="Center"/>

			<Button Command="{Binding RunLedStatus}"
					Foreground="Red"
                    Content="I"
					MinWidth="32" />

			<Button Command="{Binding StopOneCommand}"
					Foreground="Red"
                    Content="O"
					MinWidth="32" />

		</StackPanel>

		<StackPanel Background="AliceBlue" Orientation="Vertical" HorizontalAlignment="Center"
					Margin="12">
			<!-- This button will ask HAL to open the doors -->
			<TextBlock Text="{Binding TestAreaContent}" HorizontalAlignment="Center" VerticalAlignment="Center" />
			<StackPanel Orientation="Horizontal" VerticalAlignment="Center" Spacing="5">
				<TextBox Name="other" Watermark="Hello!" Text="45.4" />
				<TextBlock>Hz</TextBlock>
			</StackPanel>

		</StackPanel>

		<StackPanel Background="AliceBlue" Orientation="Vertical" HorizontalAlignment="Center"
					Margin="12">
			<!-- This button will ask HAL to open the doors -->
			<RadioButton IsChecked="True" Margin="3">Салат Оливье</RadioButton>
			<RadioButton Margin="3">Котлеты по-киевски</RadioButton>
			<RadioButton Margin="3">Селедка под шубой</RadioButton>
			<Button Width="80" Margin="3">Заказать</Button>

		</StackPanel>

		<StackPanel Background="AliceBlue" Orientation="Vertical" HorizontalAlignment="Center">
			<!-- TODO: Разобраться с Ancestor .((vm:MyUserControlViewModel)DataContext).CustomProperty-->
			<Decorator>
				<TextBlock Text="{Binding $parent[UserControl;1].DataContext.Description}"/>
			</Decorator>
			<TextBlock Text="{Binding $parent[UserControl;1].DataContext.Description}"/>
			<!--<TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}, Path=Type}"/>-->
			<Expander Header="Пушкин">
				<TextBlock>Онегин был, по мнению многих, ученый малый, но ...</TextBlock>
			</Expander>
		</StackPanel>


	</StackPanel>

</UserControl>